version: "3.9"
name: kidney-life-prod

services:
  db:
    container_name: postgres-db-prod
    image: postgres
    restart: always
    volumes:
      - ./Backend/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports: 
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - shared_network
    env_file:
      - .prod.env

  backend:
    container_name: backend-prod
    mem_limit: 1g
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "${BE_PORT}:${BE_PORT}"
    depends_on:
      - db
    networks:
      - shared_network
    env_file:
      - .prod.env

  frontend:
    container_name: frontend-prod
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.front
      args:
        - REACT_APP_BE_HOST=${REACT_APP_BE_HOST}
    ports:
      - "${FE_PORT}:80"
    volumes:
      - ./Frontend/kidney-life/default.conf.template:/etc/nginx/templates/default.conf.template
    networks:
      - shared_network
    depends_on:
      - backend
    env_file:
      - .prod.env
  
  nginx:
    container_name: reverse-proxy
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./ReverseProxy/default.conf.template:/etc/nginx/templates/default.conf.template
    depends_on:
      - backend
      - frontend
    networks:
      - shared_network
    env_file:
      - .prod.env

networks:
  shared_network:
    driver: bridge 
